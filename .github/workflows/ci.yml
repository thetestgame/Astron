# GitHub Actions workflow for building and pushing Docker images and syncing README
name: Build/Push Docker images

on:
  # Trigger the workflow manually or when code is pushed to the primary branchs
  workflow_dispatch:
  push:
    branches:
      - 'develop'
      - 'staging'
      - 'release'

jobs:
  # Job to push the release Docker image to multiple registries
  push_to_registries:
    name: Build/Push Docker Images
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      # Step 1: Check out the repository code
      - name: Checkout
        uses: actions/checkout@v2

      # Step 2: Extract metadata about the Docker image
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            thetestgame/astron
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=raw,value=latest,enable={{is_default_branch}}

      # Load the secret from 1Password
      - name: Load secret
        if: github.event_name != 'pull_request'
        id: op-load-secret
        uses: 1password/load-secrets-action@v2
        with:
          export-env: false
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          USERNAME: op://development/43xfpd5ixf5giqam4fxgeuke2m/username
          CREDENTIAL: op://development/43xfpd5ixf5giqam4fxgeuke2m/credential

      # Step 3: Log in to DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ steps.op-load-secret.outputs.USERNAME }}
          password: ${{ steps.op-load-secret.outputs.CREDENTIAL }}

      # Step 4: Build and push the Docker image
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: "BUILD_TYPE=Release"

      # Step 5: Sync GitHub README with DockerHub repository README
      - name: Sync GitHub README
        uses: ms-jpq/sync-dockerhub-readme@v1
        if: github.event_name != 'pull_request'
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: thetestgame/astron
          readme: "./README.md"